<head>
  <title>Service Oriented Architecture</title>
  <script src="https://js.pusher.com/7.0/pusher.min.js"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
  <script>

    // Enable pusher logging - don't include this in production
    Pusher.logToConsole = true;

    var pusher = new Pusher('dd9f23cab2c8652cbd08', {
      cluster: 'us2'
    });

    var channel = pusher.subscribe('my-channel');
    channel.bind('my-event', function (data) {
      document.getElementById('async_response').innerHTML = JSON.stringify(data.message);
      document.getElementById('user_count').innerHTML = JSON.stringify(data.user_total);
      document.getElementById('tweet_count').innerHTML = JSON.stringify(data.tweet_total);
      document.getElementById('follow_count').innerHTML = JSON.stringify(data.follow_total);
    });
  </script>
</head>

<body>
<div class="container">
<h1>Code Samples for Services, Processes, Threads, and Scale</h1>
<div class="row">
<div class="col">
  <h2>Status</h4>
  <ul>
        <li>There are currently: <span id="user_count"><%= @users.size %></span> users</li>
        <li>There are currently: <span id="tweet_count"><%= @tweets.size %></span> tweets</li>
        <li>There are currently: <span id="follow_count"><%= @follows.size %></span> follows</li>
        <li>Last sync response at <span id="sync_response"></span></li>
        <li>Last async response at <span id="async_response"></span></li>
  </ul>
</div>
</div>
<div class="row">
<h2>Adding blocks of random users</h2>
<p>These buttons all add 250 users to the database. In both cases the work is being done by the service app. Nothing much is being done my the mainapp.
</p>
<form method="POST" action="/users/add/sync">
<div class="col-5">
  <button type="submit" formaction="/users/add/sync">
    add a block of users sybnchronously
  </button>
  <button type="submit" formaction="/users/add/async">
    add a block of users asynchronously
  </button>
</div>
<h2>MainApp: Add Seed Data</h2>
<p>These buttons will cause the main app (not the service) to add the seed data to the database. You can click around. All the work is being done by the main app.
</p>
<form method="POST" action="/seed/addusers/sync">
<div class="col-5">

  <button type="submit" formaction="/seed/deleteall/sync" >
  Delete all Seed Data
  </button>
  <button type="submit" formaction="/seed/addusers/sync" >
  Add seed users
  </button>
  <button type="submit" formaction="/seed/addfollows/sync" >
  Add seed follows
  </button>
  <button type="submit" formaction="/seed/addtweets/sync" >
  Add seed tweets
  </button>
  <button type="submit" formaction="/seed/addtweetsfast/sync" >
  Faster Algorithm Add seed tweets
  </button>
</form>
</div>
</div>
<div class="row">
<h2>SuckerPunch Add Seed Data</h2>
<p>These buttons will cause the main app (not the service) to add the seed data to the database.These are similar to the ones above but they use SuckerPunch to start a thread in the background.
</p>
<form method="POST" action="/seed/addusers/sync">
<div class="col-5">

  <button type="submit" formaction="/seed/addtweets/sucker" >
  Add seed tweets
  </button>
</div>
</form>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
</body>